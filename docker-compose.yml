version: '3.1'

services:

  website-front:
    image: website-front:0.0.8
    restart: always
      #ports:
      #- 8084:80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.website-front.rule=Host(`salemina.com`)" # Add both domains here
      - "traefik.http.routers.website-front.tls.certresolver=mycert"
      - "traefik.http.routers.website-front-secure.tls=true"
      - "traefik.http.routers.website-front.middlewares=redirect-https"
      - "traefik.http.middlewares.redirect-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-https.redirectscheme.permanent=true"
      - "traefik.http.services.website-front.loadbalancer.server.port=80"

  mongo:
    image: registry.docker.ir/mongo:6-focal
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: hami1370caspersisi
      MONGO_INITDB_DATABASE: blog_panel
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  backend:
    image: backend:0.0.5
    restart: always
    ports:
      - 3005:3005

        # front:
        #image: front_salemina:0.0.4
        #restart: always
        #ports:
        #- 5173:5173

  data-checking-app-back-end:
    image: backend_data_checking:1.2.0
    restart: always
    ports:
      - 3000:3000

  data-checking-app-front-end:
    image: frontend_data_checking:1.3.0
    restart: always
    ports:
      - 5173:80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.data-checking.rule=Host(`data.salemina.com`)"
      - "traefik.http.routers.data-checking.entrypoints=https"
      - "traefik.http.routers.data-checking.tls.certresolver=mycert"
      - "traefik.http.services.data-checking.loadbalancer.server.port=80"

  blog-panel-backend:
    image: blog-panel-backend:1.0.0
    restart: always
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://root:hami1370caspersisi@mongo:27017/blog_panel
      - SEED_DATABASE=true
      - JWT_SECRET=your_super_secret_key_change_in_production
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=9000
      - MINIO_USE_SSL=false
      - MINIO_ACCESS_KEY=salemina
      - MINIO_SECRET_KEY=salemina
      - MINIO_BUCKET=blog-media
      - MINIO_PUBLIC_URL=https://salemina.com/minio
    ports:
      - 5000:5000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.blog-panel-api.rule=Host(`blog-api.salemina.com`)"
      - "traefik.http.routers.blog-panel-api.tls.certresolver=mycert"
      - "traefik.http.services.blog-panel-api.loadbalancer.server.port=5000"
    depends_on:
      - mongo
      - minio

  mongo-express:
    image: registry.docker.ir/mongo-express
    restart: always
    ports:
      - 8085:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: hami1370caspersisi
      ME_CONFIG_MONGODB_URL: mongodb://root:hami1370caspersisi@mongo:27017/
      ME_CONFIG_BASICAUTH: true
      ME_CONFIG_BASICAUTH_USERNAME: salemina
      ME_CONFIG_BASICAUTH_PASSWORD: hami1370caspersisi
      
  minio:
    image: registry.docker.ir/minio/minio
    container_name: minio
    ports:
      - "9000:9000"         
      - "9001:9001"          
    volumes:
      - minio_data:/data    
    environment:
      MINIO_ROOT_USER: salemina
      MINIO_ROOT_PASSWORD: salemina
    command: server /data --console-address ":9001"    

  traefik:
    image: docker.arvancloud.ir/traefik:v3.1.2
    command:
      - "--log.level=INFO"
      - "--log.filepath=/log-file.log"
      - "--log.format=json"
      - "--api=true"
      - "--ping=true"
      - "--accesslog=true"
      - "--accesslog.bufferingsize=100"
      - "--api.insecure=true"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.exposedbydefault=false"
        # "--entrypoints.web.address=:80"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--certificatesresolvers.mycert.acme.email=h.horiyat.dev@gmail.com"
      - "--certificatesresolvers.mycert.acme.storage=/acme/acme.json"
      - "--certificatesresolvers.mycert.acme.tlschallenge=true"
      - "--providers.file.filename=/traefik/config.yml"
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-acme:/acme
      - ./traefik:/traefik
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.rule=Host(`traefik.salemina.com`)"
      - "traefik.http.routers.traefik.middlewares=https-redirect"
      - "traefik.http.middlewares.https_redirect.redirectscheme.permanent=true"
      - "traefik.http.middlewares.web-auth.basicauth.users=adminsalemina:$$apr1$$8FC3cZe8$$aWg0YxwKdxQjOkmiRq39j/"
      - "traefik.http.routers.traefik-secure.middlewares=web-auth"
      - "traefik.http.routers.traefik-secure.entrypoints=https"
      - "traefik.http.routers.traefik.middlewares=https-redirect@docker"
      - "traefik.http.middlewares.https_redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https_redirect.redirectscheme.permanent=true"
      - "traefik.http.routers.http_catchall.middlewares=https_redirect"
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik.salemina.com`)"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.options=default"
      - "traefik.http.routers.traefik-secure.tls.certresolver=mycert"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"   
volumes:
   traefik-acme:
     name: traefik-acme  
   minio_data:
     driver: local
   mongo_data:
     driver: local 